apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 91107
        versionName '0.9.11.7'
        applicationId 'net.yupol.transmissionremote.app'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [fabricApiKey: "${apiKey('fabric_api_key')}"]
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            lintOptions {
                disable 'MissingTranslation'
                abortOnError false
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    dataBinding {
        enabled true
    }

    useLibrary 'org.apache.http.legacy'
}

dependencies {
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.google.guava:guava:23.6-android'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation('com.octo.android.robospice:robospice:1.4.14') {
        exclude (group: 'commons-io', module: 'commons-io')
    }
    implementation('com.octo.android.robospice:robospice-google-http-client:1.4.14') {
        exclude (group: 'org.apache.httpcomponents', module: 'httpclient')
        exclude (group: 'commons-io', module: 'commons-io')
    }
    implementation('com.google.http-client:google-http-client-jackson2:1.22.0') {
        exclude (group: 'org.apache.httpcomponents', module: 'httpclient')
    }

    implementation('com.mikepenz:materialdrawer:6.0.8@aar') {
        transitive = true
    }
    implementation 'com.mikepenz:iconics-core:3.0.4@aar'
    implementation "com.mikepenz:iconics-views:3.0.4@aar"
    implementation 'com.mikepenz:google-material-typeface:3.0.1.3.original@aar'
    implementation 'com.mikepenz:fontawesome-typeface:5.3.1.1@aar'
    implementation 'com.mikepenz:community-material-typeface:2.7.94.1@aar'
    implementation 'com.mikepenz:ionicons-typeface:2.0.1.5@aar'

    implementation 'com.github.sevar83:indeterminate-checkbox:1.0.5@aar'

    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }

    implementation 'com.github.hotchemi:permissionsdispatcher:2.2.0'
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.2.0'

    implementation 'com.getbase:floatingactionbutton:1.10.1'

    implementation 'com.evernote:android-job:1.2.2'

    implementation 'org.apache.commons:commons-io:1.3.2'

    // Emoji
    implementation 'com.vdurmont:emoji-java:4.0.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation 'org.mockito:mockito-core:2.13.0'
    androidTestImplementation "org.mockito:mockito-android:2.13.0"
}

def property(String fileName, String propertyName) {
    def propsFile = rootProject.file(fileName)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propertyName] != null) {
            return props[propertyName]
        } else {
            throw new GradleException("There is no '" + propertyName + "' property in '" + propsFile.name + "' file")
        }
    } else {
        throw new GradleException("'" + propsFile.name + "' file does not exist")
    }
}

def apiKey(String name) {
    return property("api_keys.properties", name)
}
